name: Merge

on:
  push:
    branches: [main]
    paths-ignore:
      - '*.md'
      - '.github/**'
      - '.github/graphics/**'
      - '!.github/workflows/**'
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag set to deploy; e.g. PR number or prod"
        type: string
        default: 'prod'

concurrency:
  # Do not interrupt previous workflows
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  vars:
    name: Set Variables
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    runs-on: ubuntu-24.04
    timeout-minutes: 1
    steps:
      # Get PR number for squash merges to main
      - name: PR Number
        if: ${{ ! inputs.tag }}
        id: pr
        uses: bcgov-nr/action-get-pr@v0.0.1

      - name: Set Tag
        id: tag
        run: echo "tag=${{ inputs.tag || steps.pr.outputs.pr }}" >> $GITHUB_OUTPUT

  # https://github.com/bcgov/quickstart-openshift-helpers
  deploy-test:
    name: Deploy (test, tag=${{ needs.vars.outputs.tag }})
    needs: [vars]
    uses: ./.github/workflows/.deployer.yml
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      environment: test
      db_user: app
      tag: ${{ needs.vars.outputs.tag }}

  deploy-prod:
    name: Deploy (prod, tag=${{ needs.vars.outputs.tag }})
    needs: [deploy-test, vars]
    uses: ./.github/workflows/.deployer.yml
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      environment: prod
      db_user: app
      params:
        --set backend.deploymentStrategy=RollingUpdate
        --set frontend.deploymentStrategy=RollingUpdate
        --set global.autoscaling=true
        --set frontend.pdb.enabled=true
        --set backend.pdb.enabled=true
      tag: ${{ needs.vars.outputs.tag }}

  promote:
    name: Promote Images
    needs: [deploy-prod, vars]
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [migrations, backend, frontend]
    timeout-minutes: 1
    steps:
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.package }}
          target: ${{ needs.vars.outputs.tag }}
          tags: prod
